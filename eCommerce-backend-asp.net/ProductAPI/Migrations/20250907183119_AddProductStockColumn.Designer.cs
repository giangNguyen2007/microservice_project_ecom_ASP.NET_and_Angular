// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProductAPI.Data;

#nullable disable

namespace ProductAPI.Migrations
{
    [DbContext(typeof(ProductDBContext))]
    [Migration("20250907183119_AddProductStockColumn")]
    partial class AddProductStockColumn
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("ProductAPI.Model.CommentModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("ProductModelId")
                        .HasColumnType("char(36)");

                    b.Property<int?>("Rating")
                        .HasColumnType("int");

                    b.Property<Guid?>("userId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("ProductModelId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3e1a33b3-f75d-425e-ae82-625e98822d4c"),
                            Content = "Great product!",
                            ProductId = new Guid("3ed6018b-0017-446b-9fec-0214b0821b4e"),
                            Rating = 5,
                            userId = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("ProductAPI.Model.ProductModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Category")
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("PhotoUrl")
                        .HasColumnType("longtext");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("ReservedStock")
                        .HasColumnType("int");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3ed6018b-0017-446b-9fec-0214b0821b4e"),
                            Category = "Shoes",
                            Description = "Nike Shoes",
                            Price = 50,
                            ReservedStock = 0,
                            Stock = 100,
                            Title = "Nike Shoes"
                        });
                });

            modelBuilder.Entity("ProductAPI.Model.CommentModel", b =>
                {
                    b.HasOne("ProductAPI.Model.ProductModel", null)
                        .WithMany("Comments")
                        .HasForeignKey("ProductModelId");
                });

            modelBuilder.Entity("ProductAPI.Model.ProductModel", b =>
                {
                    b.Navigation("Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
